# Cache configuration optimized for Codemagic
caches:
  - key: gradle-cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
  - key: android-sdk-34-components
    paths:
      - $ANDROID_HOME/platforms/android-34
      - $ANDROID_HOME/build-tools/34.0.0
      - $ANDROID_HOME/platform-tools

workflows:
  android-release:
    name: Android Release Build
    max_build_duration: 120
    
    environment:
      groups:
        - android_signing  # Contains:
          # KEYSTORE (file)
          # KEYSTORE_PASSWORD
          # KEY_ALIAS
          # KEY_PASSWORD
      vars:
        BUILD_TYPE: "release"  # lowercase for consistency, scripts will capitalize where needed
        ANDROID_HOME: /opt/android-sdk
      java: 17

    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: main
          include: true
        - pattern: release/*  # Optional: Add other release branches
          include: true

    scripts:
      - name: Android SDK Setup
        script: |
          set -e
          echo "=== Java Environment ==="
          java -version
          
          export ANDROID_HOME=/opt/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0
          
          if ! command -v sdkmanager >/dev/null 2>&1; then
            echo "ERROR: sdkmanager not found. Possible solutions:"
            echo "1. Enable 'Android SDK Command-line Tools' in Codemagic build settings"
            echo "2. Check build machine type supports Android"
            exit 1
          fi
          
          echo "=== Installing Android Components ==="
          yes | sdkmanager --licenses
          sdkmanager --verbose \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "cmdline-tools;latest"

      - name: Build and Analyze
        script: |
          set -e
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0
          
          echo "=== Building Release APK ==="
          ./gradlew clean assemble${BUILD_TYPE^}
          
          echo "=== Running Quality Checks ==="
          ./gradlew lint${BUILD_TYPE^}
          
          echo "=== APK Analysis ==="
          $ANDROID_HOME/build-tools/34.0.0/apkanalyzer apk summary app/build/outputs/apk/${BUILD_TYPE}/app-${BUILD_TYPE}.apk
          $ANDROID_HOME/build-tools/34.0.0/apkanalyzer files list app/build/outputs/apk/${BUILD_TYPE}/app-${BUILD_TYPE}.apk | grep lib/arm64-v8a/

      - name: Security Verification
        script: |
          set -e
          echo "=== Security Checks ==="
          if grep -r 'android:debuggable="true"' app/src/main/AndroidManifest.xml; then
            echo "ERROR: Release build must not be debuggable!"
            exit 1
          fi
          
          apksigner verify --print-certs app/build/outputs/apk/${BUILD_TYPE}/app-${BUILD_TYPE}.apk

    artifacts:
      - app/build/outputs/apk/**/*.apk
      - app/build/outputs/mapping/${BUILD_TYPE}/**/mapping.txt
      - app/build/reports/**/*

    publishing:
      email:
        recipients:
          - joepk062@gmail.com

notifications:
  email:
    recipients:
      - joepk062@gmail.com