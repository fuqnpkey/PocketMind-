# Global cache configuration
caches:
  - key: gradle-cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
  - key: android-sdk-34
    paths:
      - $CM_ANDROID_SDK_ROOT/platforms/android-34
      - $CM_ANDROID_SDK_ROOT/build-tools/34.0.0

workflows:
  android-release:
    name: Android Release Build
    max_build_duration: 120
    
    environment:
      groups:
        - android_signing
      vars:
        BUILD_TYPE: "release"
      java: 17

    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: main
          include: true

    scripts:
      - name: Android Environment Setup
        script: |
          # ===== Environment Diagnostics =====
          echo "=== System Environment ==="
          echo "Java version:"
          java -version
          echo "Android SDK root: $CM_ANDROID_SDK_ROOT"
          
          # ===== SDK Structure Verification =====
          echo "=== SDK Directory Structure ==="
          if [ ! -d "$CM_ANDROID_SDK_ROOT" ]; then
            echo "ERROR: Android SDK directory not found"
            exit 1
          fi
          
          ls -la $CM_ANDROID_SDK_ROOT || echo "Failed to list SDK contents"
          
          # ===== Tool Discovery =====
          echo "=== Locating Android Tools ==="
          SDKMANAGER_PATH=$(
            find $CM_ANDROID_SDK_ROOT \
              -type f -name "sdkmanager" \
              -print \
              -quit 2>/dev/null
          )
          
          if [ -z "$SDKMANAGER_PATH" ]; then
            echo "ERROR: sdkmanager not found in:"
            find $CM_ANDROID_SDK_ROOT -type d -name "bin" || echo "No bin directories found"
            exit 1
          fi
          
          echo "sdkmanager found at: $SDKMANAGER_PATH"
          SDKMANAGER_DIR=$(dirname "$SDKMANAGER_PATH")
          
          # ===== PATH Configuration =====
          export PATH=$PATH:$SDKMANAGER_DIR:$CM_ANDROID_SDK_ROOT/platform-tools:$CM_ANDROID_SDK_ROOT/build-tools/34.0.0
          echo "Final PATH: $PATH"
          
          # ===== Tool Verification =====
          REQUIRED_TOOLS=("sdkmanager" "apkanalyzer" "adb")
          for tool in "${REQUIRED_TOOLS[@]}"; do
            if ! command -v $tool >/dev/null 2>&1; then
              echo "ERROR: $tool not found in PATH"
              echo "Searched in: $PATH"
              exit 1
            fi
            echo "$tool located at: $(which $tool)"
          done
          
          # ===== SDK Component Setup =====
          echo "=== Installing Android Components ==="
          yes | sdkmanager --licenses
          sdkmanager --verbose \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "cmdline-tools;latest"
            
          echo "=== Installed Components ==="
          sdkmanager --list_installed

      - name: Build and Sign
        script: |
          # Re-establish PATH in case new shell
          export PATH=$PATH:$CM_ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$CM_ANDROID_SDK_ROOT/platform-tools:$CM_ANDROID_SDK_ROOT/build-tools/34.0.0
          
          echo "=== Building Release APK ==="
          ./gradlew clean assemble${BUILD_TYPE}
          
          echo "=== Running Lint Checks ==="
          ./gradlew lintRelease
          
          echo "=== Verifying APK Contents ==="
          apkanalyzer apk summary app/build/outputs/apk/release/app-release.apk
          apkanalyzer files list app/build/outputs/apk/release/app-release.apk | grep lib/arm64-v8a/

      - name: Security Verification
        script: |
          echo "=== Running Security Checks ==="
          if grep -r "android:debuggable=\"true\"" app/src/main/AndroidManifest.xml; then
            echo "ERROR: Release build must not be debuggable!"
            exit 1
          fi
          
          echo "=== Checking Signing ==="
          apksigner verify --print-certs app/build/outputs/apk/release/app-release.apk

    artifacts:
      - app/build/outputs/apk/**/*.apk
      - app/build/outputs/mapping/release/**/mapping.txt
      - app/build/reports/**/*

    publishing:
      email:
        recipients:
          - joepk062@gmail.com

notifications:
  email:
    recipients:
      - joepk062@gmail.com